---
scenario:
  create_sequence:
    - dependency
    - prepare
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - destroy
  cleanup_sequence:
    - destroy
dependency:
  name: galaxy
  options:
    requirements-file: collections.yml
  # enabled: false
driver:
  name: docker
platforms:
# TODO - Fix Failures in Centos images
# fatal: [centos8-systemd]: FAILED! => {"changed": false, "cmd": "/bin/systemctl", "msg": "Failed to connect to bus: No such file or directory", "rc": 1, "stderr": "Failed to connect to bus: No such file or directory\n", "stderr_lines": ["Failed to connect to bus: No such file or directory"], "stdout": "", "stdout_lines": []}
# fatal: [centos7-systemd]: FAILED! => {"changed": false, "msg": "Service is in unknown state", "status": {}}
  # - name: centos7-systemd
  #   image: centos:7
  #   command: /sbin/init
  #   cap_add:
  #     - ALL
  #   tmpfs:
  #     - /run
  #     - /tmp
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  # - name: centos8-systemd
  #   image: quay.io/centos/centos:stream8
  #   command: /sbin/init
  #   cap_add:
  #     - ALL
  #   tmpfs:
  #     - /run
  #     - /tmp
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  - name: ubuntu20-04
    image: ubuntu:20.04
provisioner:
  name: ansible
  log: true
  inventory:
    links:
      hosts: 'inventory/hosts.yml'
      group_vars: 'inventory/group_vars/'
      host_vars: 'inventory/host_vars/'
  config_options:
    defaults:
      jinja2_extensions: 'jinja2.ext.loopcontrols,jinja2.ext.do,jinja2.ext.i18n'
      gathering: explicit
verifier:
  name: ansible
