# Copyright (c) 2023 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  overlay_rt_type:
    documentation_options:
      table: overlay-settings
    type: dict
    description: |
      Configuration options for the Administrator subfield (first part of RT) and the Assigned Number subfield (second part of RT).

      By default Route Targets (RT) are set to:
      - `<(mac_vrf_id_base or mac_vrf_vni_base) + vlan_id>:<(mac_vrf_id_base or mac_vrf_vni_base) + vlan_id>` for VLANs and VLAN-Aware Bundles with L2 vlans.
      - `<vlan_aware_bundle_number_base + vrf_id>:<vlan_aware_bundle_number_base + vrf_id>` for VLAN-Aware Bundles with SVIs.
      - `<vlan_aware_bundle_number_base + id>:<vlan_aware_bundle_number_base + id>` for VLAN-Aware Bundles defined under 'evpn_vlan_bundles'.
      - `<vrf_id>:<vrf_id>` for VRFs.

      Notes:
      RT is a 48-bit value which is split into <16-bit>:<32-bit> or <32-bit>:<16-bit>.
      When using 32-bit ASN/number the VNI can only be a 16-bit number. Alternatively use vlan_id/vrf_id as assigned number.
      For 16-bit ASN/number the assigned number can be a 32-bit number.
    keys:
      admin_subfield:
        type: str
        convert_types:
          - int
        description: |
          The method for deriving RT Administrator subfield (first part of RT):
          - 'vrf_id' means `(mac_vrf_id_base or mac_vrf_vni_base) + vlan_id` for VLANs, `(vrf_id or vrf_vni)` for VRFs and `id` for bundles defined under 'evpn_vlan_bundles'.
          - 'vrf_vni' means `(mac_vrf_vni_base or mac_vrf_id_base) + vlan_id` for VLANs, `(vrf_vni or vrf_id)` for VRFs and `id` for bundles defined under 'evpn_vlan_bundles'.
          - 'id' means `vlan_id` for VLANs, `(vrf_id or vrf_vni)` for VRFs and `id` for bundles defined under 'evpn_vlan_bundles'.
          - 'bgp_as' means the AS number of the device.
          - Integer between <0-65535>.
          - Integer between <0-4294967295>.

          The 'vrf_id' and 'vrf_vni' methods can be overridden per VLAN if either 'rt_override' or 'vni_override' is set (preferred in this order).
          The 'vrf_id', 'vrf_vni' and 'id' methods can be overridden per bundle defined under `evpn_vlan_bundles` using 'rt_override'.
        default: vrf_id
      vrf_admin_subfield:
        type: str
        convert_types:
          - int
        description: |
          The method for deriving RT Administrator subfield (first part of RT) for VRF services:
          - 'id' means `(vrf_id or vrf_vni)`.
          - 'vrf_id' means `(vrf_id or vrf_vni)`.
          - 'vrf_vni' means `(vrf_vni or vrf_id)`.
          - 'bgp_as' means the AS number of the device.
          - Integer between <0-65535>.
          - Integer between <0-4294967295>.

          'vrf_admin_subfield' takes precedence for VRF RDs if set. Otherwise the 'admin_subfield' value will be used.
        default: vrf_id
      vlan_assigned_number_subfield:
        type: str
        valid_values:
          - mac_vrf_id
          - mac_vrf_vni
          - vlan_id
        default: mac_vrf_id
        description: |
          The method for deriving RT Assigned Number subfield for VLAN services (second part of RT):
          - 'mac_vrf_id' means `(mac_vrf_id_base or mac_vrf_vni_base) + vlan_id`.
          - 'mac_vrf_vni' means `(mac_vrf_vni_base or mac_vrf_id_base) + vlan_id`.
          - 'vlan_id' will only use the 'vlan_id' and ignores all base values.

          These methods can be overridden per VLAN if either 'rt_override' or 'vni_override' is set (preferred in this order).
