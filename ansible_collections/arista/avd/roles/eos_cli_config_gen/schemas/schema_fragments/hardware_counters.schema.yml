# Copyright (c) 2023 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../../plugins/plugin_utils/schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  hardware_counters:
    type: dict
    keys:
      features:
        type: list
        description: |
          This data model allows to configure the list of hardware counters feature
          available on Arista platforms.

          The `name` key accepts a list of valid_values which MUST be updated to support
          new feature as they are released in EOS.

          The available values of the different keys like 'direction' or 'address_type'
          are feature and hardware dependent and this model DOES NOT validate that the
          combinations are valid. It is the responsability of the user of this data model
          to make sure that the rendered CLI is accepted by the targeted device.

          Examples:

            * Use:
              ```yaml
              hardware_counters:
                features:
                  - name: ip
                    direction: out
                    layer3: true
                    units_packets: true
              ```

              to render:
              ```eos
              hardware counter feature ip out layer3 units packets
              ```
            * Use:
              ```yaml
              hardware_counters:
                features:
                  - name: route
                    address_type: ipv4
                    vrf: test
                    prefix: 192.168.0.0/24
              ```

              to render:
              ```eos
              hardware counter feature route ipv4 vrf test 192.168.0.0/24
              ```

        # primary_key: name
        # no primary key to allow multiple times the same name
        items:
          type: dict
          keys:
            name:
              type: str
              valid_values:
                - acl
                - decap-group
                - directflow
                - ecn
                - flow-spec
                - gre tunnel interface
                - ip
                - mpls interface
                - mpls lfib
                - mpls tunnel
                - multicast
                - nexthop
                - pbr
                - pdp
                - policing interface
                - qos
                - qos dual-rate-policer
                - route
                - routed-port
                - subinterface
                - tapagg
                - traffic-class
                - traffic-policy
                - vlan
                - vlan-interface
                - vni decap
                - vni encap
                - vtep decap
                - vtep encap
            direction:
              type: str
              valid_values:
                - in
                - out
                - cpu
              description: |
                Most features support only 'in' and 'out'. Some like traffic-policy support 'cpu'.
                Some features DO NOT have any direction.
                This validation IS NOT made by the schemas.
            address_type:
              type: str
              valid_values:
                - ipv4
                - ipv6
                - mac
              description: |
                Supported only for the following features:
                - acl: [ipv4, ipv6, mac] if direction is 'out'
                - multicast: [ipv4, ipv6]
                - route: [ipv4, ipv6]
                This validation IS NOT made by the schemas.
            layer3:
              type: bool
              description: |
                Supported only for the 'ip' feature
            vrf:
              type: str
              description: |
                Supported only for the 'route' feature.
                This validation IS NOT made by the schemas.
              convert_types:
                - int
            prefix:
              type: str
              description: |
                Supported only for the 'route' feature.
                Mandatory for the 'route' feature.
                This validation IS NOT made by the schemas.
            units_packets:
              type: bool
